/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventana;

import Service.ProductoListaService;
import dataBaseConfig.DatabaseConfig;
import dto.ProductoListaDTO;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import validator.ProductoListaValidator;

/**
 *
 * @author Carolina
 */
public class VentanaListaCompras extends javax.swing.JFrame {
    private int idUsuario;

    /*
     * Creates new form VentanaListaCompras
     */
    public VentanaListaCompras() {
        initComponents();
        limpiarCampos();
        asegurarListaCompra();
        this.idUsuario = idUsuario;
     
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCompra = new javax.swing.JTable();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("GastroBot");

        btnVolver.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        tablaCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Producto", "Precio"
            }
        ));
        jScrollPane1.setViewportView(tablaCompra);

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVolver))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnVolver)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
         VentanaGeneral ventana = new VentanaGeneral();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        int fila = tablaCompra.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona un producto para eliminar");
        return;
    }

    int idProducto = (int) tablaCompra.getValueAt(fila, 0);

    try {
        ProductoListaService service = new ProductoListaService();
        service.eliminarProducto(idProducto);
        JOptionPane.showMessageDialog(this, "Producto eliminado exitosamente");
        cargarProductos();
        limpiarCampos();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
    }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        String nombre = txtNombre.getText();
    String precioTexto = txtPrecio.getText();

    try {
        double precio = Double.parseDouble(precioTexto);
        int idListaCompra = obtenerIdListaCompraDelUsuario(); 

        ProductoListaDTO producto = new ProductoListaDTO();
        producto.setNombreProducto(nombre);
        producto.setPrecio(precio);
        producto.setIdListaCompra(idListaCompra);

        ProductoListaService service = new ProductoListaService();

        if (ProductoListaValidator.validarProductoLista(producto)) {
            service.agregarProducto(producto);
            JOptionPane.showMessageDialog(this, "Producto agregado exitosamente");
            cargarProductos(); 
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, llena todos los campos correctamente");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Precio inv√°lido");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        e.printStackTrace();
    }
        
        
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        
       int fila = tablaCompra.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona un producto para editar");
        return;
    }

    try {
        int id = (int) tablaCompra.getValueAt(fila, 0);
        String nuevoNombre = txtNombre.getText();
        double nuevoPrecio = Double.parseDouble(txtPrecio.getText());
        int idListaCompra = obtenerIdListaCompraDelUsuario();

        ProductoListaDTO producto = new ProductoListaDTO();
        producto.setId(id);
        producto.setNombreProducto(nuevoNombre);
        producto.setPrecio(nuevoPrecio);
        producto.setIdListaCompra(idListaCompra);

        if (ProductoListaValidator.validarProductoLista(producto)) {
            ProductoListaService service = new ProductoListaService();
            service.editarProducto(producto);
            JOptionPane.showMessageDialog(this, "Producto editado exitosamente");
            cargarProductos();
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor completa correctamente los campos");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Precio inv√°lido");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al editar: " + e.getMessage());
    } 
        
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void limpiarCampos() {
    txtNombre.setText("");
    txtPrecio.setText("");
    }
    
    private int obtenerIdListaCompraDelUsuario() throws SQLException {
    int idUsuario = obtenerIdUsuarioActual(); 
    try (Connection conn = DatabaseConfig.getConnection();
         PreparedStatement stmt = conn.prepareStatement("SELECT idListaCompra FROM ListaCompra WHERE idUsuario = ?")) {
        stmt.setInt(1, idUsuario);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            return rs.getInt("idListaCompra");
        } else {
            throw new SQLException("No se encontr√≥ lista de compras");
        }
    }
}
    
    private void cargarProductos() {
        
        try {
        int idListaCompra = obtenerIdListaCompraDelUsuario();
        ProductoListaService service = new ProductoListaService();
        List<ProductoListaDTO> productos = service.obtenerProductosPorLista(idListaCompra);

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Producto");
        model.addColumn("Precio");

        for (ProductoListaDTO p : productos) {
            model.addRow(new Object[]{p.getId(), p.getNombreProducto(), p.getPrecio()});
        }

        tablaCompra.setModel(model);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar productos: " + e.getMessage());
        e.printStackTrace();
    }
    }
    
    private int obtenerIdUsuarioActual() {
      return  this.idUsuario;
    }
    
    
    private void asegurarListaCompra() {
    int idUsuario = obtenerIdUsuarioActual();

    try (Connection conn = DatabaseConfig.getConnection();
         PreparedStatement checkStmt = conn.prepareStatement("SELECT idListaCompra FROM ListaCompra WHERE idUsuario = ?");
         PreparedStatement insertStmt = conn.prepareStatement("INSERT INTO ListaCompra (idUsuario) VALUES (?)")) {

        checkStmt.setInt(11, idUsuario);
        ResultSet rs = checkStmt.executeQuery();

        if (!rs.next()) {
            insertStmt.setInt(11, idUsuario);
            insertStmt.executeUpdate();
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error asegurando lista de compras: " + e.getMessage());
    }
}
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablaCompra;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    

    

    

   
}
